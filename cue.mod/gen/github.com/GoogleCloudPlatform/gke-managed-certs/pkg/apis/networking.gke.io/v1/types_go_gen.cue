// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/GoogleCloudPlatform/gke-managed-certs/pkg/apis/networking.gke.io/v1

package v1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

// ManagedCertificateList is a list of ManagedCertificate objects.
#ManagedCertificateList: {
	metav1.#TypeMeta

	// metadata is the standard list metadata.
	// +optional
	metadata: metav1.#ListMeta @go(ListMeta) @protobuf(1,bytes,opt)

	// items is the list of managed certificate objects.
	items: [...#ManagedCertificate] @go(Items,[]ManagedCertificate) @protobuf(2,bytes,rep)
}

// ManagedCertificate configures the domains for which client requests a managed certificate. It also provides the current status of the certficate.
#ManagedCertificate: {
	metav1.#TypeMeta

	// Standard object metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
	// +optional
	metadata?: metav1.#ObjectMeta @go(ObjectMeta) @protobuf(1,bytes,opt)

	// Specification of the managed certificate.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
	// +optional
	spec?: #ManagedCertificateSpec @go(Spec) @protobuf(2,bytes,opt)

	// Current information about the managed certificate.
	// +optional
	status?: #ManagedCertificateStatus @go(Status) @protobuf(3,bytes,opt)
}

// ManagedCertificateSpec configures the domains for which client requests a managed certificate.
#ManagedCertificateSpec: {
	// Specifies a list of domains populated by the user for which he requests a managed certificate.
	domains: [...string] @go(Domains,[]string) @protobuf(2,bytes,rep)
}

// ManagedCertificateStatus provides the current state of the certificate.
#ManagedCertificateStatus: {
	// Specifies the status of the managed certificate.
	// +optional
	certificateStatus?: string @go(CertificateStatus) @protobuf(2,bytes,opt)

	// Specifies the status of certificate provisioning for domains selected by the user.
	domainStatus: [...#DomainStatus] @go(DomainStatus,[]DomainStatus) @protobuf(3,bytes,rep)

	// Specifies the name of the provisioned managed certificate.
	// +optional
	certificateName?: string @go(CertificateName) @protobuf(4,bytes,opt)

	// Specifies the expire time of the provisioned managed certificate.
	// +optional
	expireTime?: string @go(ExpireTime) @protobuf(5,bytes,opt)
}

// DomainStatus is a pair which associates domain name with status of certificate provisioning for this domain.
#DomainStatus: {
	// The domain name.
	domain: string @go(Domain) @protobuf(1,bytes)

	// The status.
	status: string @go(Status) @protobuf(2,bytes)
}
